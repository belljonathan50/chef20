#N canvas 423 35 1327 831 12;
#X declare -stdpath ./;
#X obj 60 561 hip~ 5;
#X floatatom 35 44 0 0 100 0 - - -;
#X obj 30 400 +~ 1;
#X obj 60 491 *~;
#X obj 781 555 line~;
#X floatatom 736 463 0 0 100000 0 - - -;
#X obj 780 528 pack 0 100;
#X obj 30 429 +~;
#X obj 77 427 samphold~;
#X obj 30 328 samphold~;
#X obj 30 375 *~;
#X obj 193 389 r~ phase;
#X obj 380 232 s~ phase;
#X obj 118 328 r~ phase;
#X obj 48 352 r~ phase;
#X obj 112 402 r~ phase;
#X obj 87 102 s chunk-size;
#X floatatom 380 52 0 0 0 0 - - -;
#X text 199 78 chunk size;
#X text 199 100 in seconds;
#X obj 391 107 r chunk-size;
#X obj 391 132 t b f;
#X obj 380 156 /;
#X obj 380 26 loadbang;
#X obj 193 413 -~ 0.5;
#X obj 193 437 *~ 0.5;
#X obj 193 460 cos~;
#X text 462 722 updated for Pd version 0.37;
#X obj 380 77 expr pow(2 \, $f1/120);
#X text 549 77 speed change;
#X obj 380 181 phasor~;
#X text 33 12 TWO OVERLAPPING SAMPLE READ ELEMENTS;
#N canvas 292 397 614 280 table 1;
#X text 365 198 --- 44103 samples ---;
#X obj 48 148 loadbang;
#X obj 52 37 adc~ 1;
#X obj 52 62 hip~ 5;
#X msg 67 91 bang;
#X obj 48 202 soundfiler;
#X text 141 155 v-- re-read original table;
#X obj 52 118 tabwrite~ table22;
#X text 108 91 <= record;
#X msg 198 222 read ../danau.wav table22;
#N canvas 0 0 450 300 (subpatch) 0;
#X array table22 4.41e+06 float 0;
#X coords 0 1.02 4.41e+06 -1.02 200 130 1 0 0;
#X restore 363 64 graph;
#X msg 48 175 read ../paris.wav table22;
#X connect 1 0 11 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 4 0 7 0;
#X connect 9 0 5 0;
#X connect 11 0 5 0;
#X restore 575 404 pd table;
#X obj 35 130 s chunk-size-samples;
#X text 196 129 ... and in samples;
#X obj 787 612 s~ read-pt;
#X obj 77 379 r~ read-pt;
#X obj 456 218 +~ 0.5;
#X obj 456 244 wrap~;
#X obj 456 269 s~ phase2;
#X obj 30 303 r chunk-size-samples;
#X obj 267 399 +~ 1;
#X obj 267 499 *~;
#X obj 267 428 +~;
#X obj 322 427 samphold~;
#X obj 267 327 samphold~;
#X obj 267 374 *~;
#X obj 432 415 -~ 0.5;
#X obj 432 439 *~ 0.5;
#X obj 432 462 cos~;
#X obj 322 377 r~ read-pt;
#X obj 267 302 r chunk-size-samples;
#X obj 356 328 r~ phase2;
#X obj 285 351 r~ phase2;
#X obj 432 391 r~ phase2;
#X obj 344 402 r~ phase2;
#X obj 60 537 +~;
#X text 418 155 loop frequency;
#X text 517 205 second phase signal;
#X text 517 225 out of phase from;
#X text 516 246 first one;
#X text 80 285 copy 1;
#X text 322 282 copy 2;
#X text 176 544 Here is the previous patch modified to use two copies
of the sample reader \, 180 degrees out of phase. The second sawtooth
signal is derived from the first one by adding a constant (0.5) and
wrapping the result to fit again between zero and one. The result is
the "phase2" signal., f 67;
#X text 176 620 The computation of "chunk-size-samples" (as a message)
and "read-pt" (an audio signal) is the same for both copies and is
separated out at top left. At top right is the same loop frequency
calculation as before., f 67;
#X text 176 682 Finally \, the two copies' outputs are added and the
result sent to the audio output., f 67;
#X obj 30 454 tabread4~ table22;
#X obj 267 453 tabread4~ table22;
#X text 70 157 <= read point in 100ths of a second;
#X text 70 46 <= chunk size (100ths of a second);
#X text 415 52 <= transposition \, halftones/10;
#X obj 523 16 declare -stdpath ./;
#X obj 39 610 dac~;
#X obj 730 434 r strech;
#X obj 780 71 mrpeach/unpackOSC;
#X obj 775 31 mrpeach/udpreceive 9998;
#X obj 686 309 print;
#X msg 849 290 \; pd dsp 0;
#X obj 910 155 s strech;
#X obj 833 163 sel 0 1;
#X obj 746 495 * 44100;
#X obj 809 438 * 16500;
#X floatatom 992 148 0 0 100000 0 - - -;
#X floatatom 1078 206 5 0 0 0 - - -;
#X obj 935 623 snapshot~;
#X floatatom 935 650 0 0 0 0 - - -;
#X obj 945 596 metro 100;
#X obj 945 571 r start;
#X msg 854 205 \; pd dsp 1 \; start bang;
#X text 874 529 ramp-time;
#X obj 780 110 route /date /dsp /strech /ramp-time /chunk-size /date-mul
;
#X obj 87 77 * 0.001;
#X obj 35 93 * 44.1;
#X connect 0 0 72 0;
#X connect 0 0 72 1;
#X connect 1 0 91 0;
#X connect 1 0 92 0;
#X connect 2 0 7 0;
#X connect 3 0 56 0;
#X connect 4 0 35 0;
#X connect 4 0 84 0;
#X connect 5 0 80 0;
#X connect 6 0 4 0;
#X connect 7 0 66 0;
#X connect 8 0 7 1;
#X connect 9 0 10 0;
#X connect 10 0 2 0;
#X connect 11 0 24 0;
#X connect 13 0 9 1;
#X connect 14 0 10 1;
#X connect 15 0 8 1;
#X connect 17 0 28 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 21 1 22 1;
#X connect 22 0 30 0;
#X connect 23 0 17 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 3 1;
#X connect 28 0 22 0;
#X connect 30 0 12 0;
#X connect 30 0 37 0;
#X connect 36 0 8 0;
#X connect 37 0 38 0;
#X connect 38 0 39 0;
#X connect 40 0 9 0;
#X connect 41 0 43 0;
#X connect 42 0 56 1;
#X connect 43 0 67 0;
#X connect 44 0 43 1;
#X connect 45 0 46 0;
#X connect 46 0 41 0;
#X connect 47 0 48 0;
#X connect 48 0 49 0;
#X connect 49 0 42 1;
#X connect 50 0 44 0;
#X connect 51 0 45 0;
#X connect 52 0 45 1;
#X connect 53 0 46 1;
#X connect 54 0 47 0;
#X connect 55 0 44 1;
#X connect 56 0 0 0;
#X connect 66 0 3 0;
#X connect 67 0 42 0;
#X connect 73 0 5 0;
#X connect 74 0 76 0;
#X connect 74 0 90 0;
#X connect 75 0 74 0;
#X connect 79 0 77 0;
#X connect 79 1 88 0;
#X connect 80 0 6 0;
#X connect 81 0 6 0;
#X connect 84 0 85 0;
#X connect 86 0 84 0;
#X connect 87 0 86 0;
#X connect 90 0 76 0;
#X connect 90 0 81 0;
#X connect 90 1 79 0;
#X connect 90 2 78 0;
#X connect 90 3 6 1;
#X connect 90 3 82 0;
#X connect 90 4 1 0;
#X connect 90 5 81 1;
#X connect 90 5 83 0;
#X connect 91 0 16 0;
#X connect 92 0 33 0;
